@page
@model CapstoneProjectDashboardFE.Pages.Admin.UserPages.IndexModel
@{
    ViewData["Title"] = "User Management";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <h4 class="card-title">Account Manager</h4>
                <button class="btn btn-primary btn-round ms-auto" data-bs-toggle="modal" data-bs-target="#addRowModal">
                    <i class="fa fa-plus"></i> Create Account
                </button>
            </div>
        </div>
        <div class="card-body">
            <!-- Modal -->
            <div class="modal fade" id="addRowModal" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header border-0">
                            <h5 class="modal-title">
                                <span class="fw-mediumbold"> New</span> <span class="fw-light"> Account </span>
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form id="createAccountForm">
                                <div class="form-group">
                                    <label for="email">Email</label>
                                    <input type="email" class="form-control" id="email" name="email" required>
                                </div>
                                <div class="form-group">
                                    <label for="password">Password</label>
                                    <input type="password" class="form-control" id="password" name="password" required>
                                </div>
                                <div class="form-group">
                                    <label for="confirm-password">Confirm Password</label>
                                    <input type="password" class="form-control" id="confirm-password" name="confirm-password" required>
                                </div>
                                <div class="form-group">
                                    <label for="fullname">Full Name</label>
                                    <input type="text" class="form-control" id="fullname" name="fullname" required>
                                </div>
                                <button type="submit" class="btn btn-primary">Create Account</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="table-responsive">
                <table id="add-row" class="display table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.UserDTO[0].UserId)</th>
                            <th>@Html.DisplayNameFor(model => model.UserDTO[0].FullName)</th>
                            <th>@Html.DisplayNameFor(model => model.UserDTO[0].Avatar)</th>
                            <th>@Html.DisplayNameFor(model => model.UserDTO[0].Email)</th>
                            <th>@Html.DisplayNameFor(model => model.UserDTO[0].Phone)</th>
                            <th>@Html.DisplayNameFor(model => model.UserDTO[0].Role)</th>
                            <th style="width: 10%">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.UserDTO)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.UserId)</td>
                                <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                                <td>
                                    <img src="@item.Avatar" alt="User Avatar" class="user-avatar" style="width: 50px; height: 50px; border-radius: 50%; object-fit: cover;" />
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                                <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                                <td>@Html.DisplayFor(modelItem => item.Role)</td>
                                <td>
                                    <div class="form-button-action">
                                        <a asp-page="./Details" asp-route-userId="@item.UserId" data-bs-toggle="tooltip" title="View Details" class="btn btn-link btn-primary btn-lg">
                                            <i class="fas fa-info-circle"></i>
                                        </a>
                                        <a type="button" asp-page="./Delete" asp-route-id="@item.UserId" data-bs-toggle="tooltip" title="Remove" class="btn btn-link btn-danger btn-lg">
                                            <i class="fa fa-times"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Core JS Files -->
<script src="~/adminAssets/assets/js/core/jquery-3.7.1.min.js"></script>
<script src="~/adminAssets/assets/js/core/popper.min.js"></script>
<script src="~/adminAssets/assets/js/core/bootstrap.min.js"></script>

<!-- jQuery Scrollbar -->
<script src="~/adminAssets/assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>

<!-- Chart JS -->
<script src="~/adminAssets/assets/js/plugin/chart.js/chart.min.js"></script>

<!-- jQuery Sparkline -->
<script src="~/adminAssets/assets/js/plugin/jquery.sparkline/jquery.sparkline.min.js"></script>

<!-- Chart Circle -->
<script src="~/adminAssets/assets/js/plugin/chart-circle/circles.min.js"></script>

<!-- Datatables -->
<script src="~/adminAssets/assets/js/plugin/datatables/datatables.min.js"></script>

<!-- Bootstrap Notify -->
<script src="~/adminAssets/assets/js/plugin/bootstrap-notify/bootstrap-notify.min.js"></script>

<!-- jQuery Vector Maps -->
<script src="~/adminAssets/assets/js/plugin/jsvectormap/jsvectormap.min.js"></script>
<script src="~/adminAssets/assets/js/plugin/jsvectormap/world.js"></script>

<!-- Sweet Alert -->
<script src="~/adminAssets/assets/js/plugin/sweetalert/sweetalert.min.js"></script>

<!-- Kaiadmin JS -->
<script src="~/adminAssets/assets/js/kaiadmin.min.js"></script>

<!-- Kaiadmin DEMO methods, don't include it in your project! -->
<script src="~/adminAssets/assets/js/setting-demo.js"></script>
<script src="~/adminAssets/assets/js/demo.js"></script>
<link rel="stylesheet" href="../assets/css/bootstrap.min.css" />
<link rel="stylesheet" href="../assets/css/plugins.min.css" />
<link rel="stylesheet" href="../assets/css/kaiadmin.min.css" />

<!-- CSS Just for demo purpose, don't include it in your project -->
<link rel="stylesheet" href="../assets/css/demo.css" />

<script>
    $("#lineChart").sparkline([102, 109, 120, 99, 110, 105, 115], {
        type: "line",
        height: "70",
        width: "100%",
        lineWidth: "2",
        lineColor: "#177dff",
        fillColor: "rgba(23, 125, 255, 0.14)",
    });

    $("#lineChart2").sparkline([99, 125, 122, 105, 110, 124, 115], {
        type: "line",
        height: "70",
        width: "100%",
        lineWidth: "2",
        lineColor: "#f3545d",
        fillColor: "rgba(243, 84, 93, .14)",
    });

    $("#lineChart3").sparkline([105, 103, 123, 100, 95, 105, 115], {
        type: "line",
        height: "70",
        width: "100%",
        lineWidth: "2",
        lineColor: "#ffa534",
        fillColor: "rgba(255, 165, 52, .14)",
    });
    function getCookie(name) {
        let matches = document.cookie.match(new RegExp(
            "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
        ));
        return matches ? decodeURIComponent(matches[1]) : null;
    }

        $(document).ready(function () {
        $("#add-row").DataTable({ pageLength: 5 });

        $("#addRowButton").click(function () {
            $("#addRowModal").modal("hide");
        });

        // Handle form submission
        $("#createAccountForm").submit(function (event) {
            event.preventDefault();

            var formData = {
                email: $("#email").val(),
                password: $("#password").val(),
                "confirm-password": $("#confirm-password").val(), // FIXED: No hyphen
                fullname: $("#fullname").val()
            };

            var token = sessionStorage.getItem("AuthToken") || getCookie("AuthToken"); // Get token from session or cookie

            if (!token) {
                alert("Authentication token is missing! Please log in again.");
                return;
            }

            $.ajax({
                type: "POST",
                url: "https://marvelous-gentleness-production.up.railway.app/api/Authentication/CreateStaff", // FIXED: Update backend API URL
                data: JSON.stringify(formData),
                contentType: "application/json",
                headers: {
                    "Authorization": "Bearer " + token
                },
                success: function (response) {
                    alert("Account created successfully!");
                    $("#addRowModal").modal("hide");
                    location.reload(); // Reload to refresh user list
                },
                error: function (xhr) {
                    let errorMessage = xhr.responseText ? JSON.parse(xhr.responseText).message : "An error occurred";
                    alert("Error: " + errorMessage);
                }
            });
        });
    });
</script>
